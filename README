1. Return the Sum of Two Numbers
   Create a method that takes two integers as arguments and return their sum.

   Examples
   SumOfTwoNumbers(3, 2) ➞ 5
   SumOfTwoNumbers(-3, -6) ➞ -9
   SumOfTwoNumbers(7, 3) ➞ 10

2. Convert Minutes into Seconds
   Write a function that takes an integer minutes and converts it to seconds.

   Examples
   convert(5) ➞ 300
   convert(3) ➞ 180
   convert(2) ➞ 120

3. Are the Numbers Equal?
   Create a function that returns true when x is equal to y; otherwise return false.

   Examples
   isSameNum(4, 8) ➞ false
   isSameNum(2, 2) ➞  true
   isSameNum(42, 32) ➞  false

4. Return the Next Number from the Integer Passed
   Create a function that takes a number as an argument, increments the number by +1 and returns the result.

   Examples
   addition(0) ➞ 1
   addition(9) ➞ 10
   addition(-3) ➞ -2

5. Power Calculator
   Create a function that takes voltage and current and returns the calculated power.

   Examples
   power(230, 10) ➞ 2300
   power(110, 3) ➞ 330
   power(480, 20) ➞ 9600

6. Convert Hours into Seconds
   Write a function that converts hours into seconds.

   Examples
   howManySeconds(2) ➞ 7200
   howManySeconds(10) ➞ 36000
   howManySeconds(24) ➞ 86400

7. Find the Perimeter of a Rectangle
   Create a function that takes length and width and finds the perimeter of a rectangle.

   Examples
   findPerimeter(6, 7) ➞ 26
   findPerimeter(20, 10) ➞ 60
   findPerimeter(2, 9) ➞ 22

8. Are the Numbers Equal?
   Create a function that takes two integers and checks if they are equal.

   Examples
   isEqual(5, 6) ➞ false
   isEqual(1, 1) ➞ true
   isEqual(36, 35) ➞ false

9. Maximum Edge of a Triangle
   Create a function that finds the maximum range of a triangle's third edge, where the side lengths are all integers.

   Examples
   nextEdge(8, 10) ➞ 17
   nextEdge(5, 7) ➞ 11
   nextEdge(9, 2) ➞ 10

10. Area of a Triangle
    Write a function that takes the base and height of a triangle and return its area.

    Examples
    triArea(3, 2) ➞ 3
    triArea(7, 4) ➞ 14
    triArea(10, 10) ➞ 50

11. Is the Number Less than or Equal to Zero?
    Create a method that takes an integer as its only argument and returns true if it's less than or equal to zero, otherwise return false.

    Examples
    lessThanOrEqualToZero(5) ➞ false
    lessThanOrEqualToZero(0) ➞ true
    lessThanOrEqualToZero(-2) ➞ true

12. Convert Age to Days
    Create a function that takes the age and return the age in days.

    Examples
    calcAge(65) ➞ 23725
    calcAge(0) ➞ 0
    calcAge(20) ➞ 7300

13. Return the Remainder from Two Numbers
    There is a single operator in Java, capable of providing the remainder of a division operation. Two numbers are passed as parameters. The first parameter divided by the second parameter will have a remainder, possibly zero. Return that value.

    Examples
    remainder(1, 3) ➞ 1
    remainder(3, 4) ➞ 3
    remainder(-9, 45) ➞ -9
    remainder(5, 5) ➞ 0

14. Football Points
    Create a function that takes the number of wins, draws and losses and calculates the number of points a football team has obtained so far.
    - wins get 3 points
    - draws get 1 point
    - losses get 0 points
    Examples
    footballPoints(3, 4, 2) ➞ 13
    footballPoints(5, 0, 2) ➞ 15
    footballPoints(0, 0, 1) ➞ 0

>>>>>>>>>>>>>>>>>>>>>>>>>
15. Return Something to Me!
    Write a function that returns the string "something" joined with a space " " and the given argument a.

    Examples
    giveMeSomething("is better than nothing") ➞ "something is better than nothing"
    giveMeSomething("Bob Jane") ➞ "something Bob Jane"
    giveMeSomething("something") ➞ "something something"


16. Less Than 100?
    Given two numbers, return true if the sum of both numbers is less than 100. Otherwise return false.

    Examples
    lessThan100(22, 15) ➞ true
    // 22 + 15 = 37
    lessThan100(83, 34) ➞ false
    // 83 + 34 = 117
    lessThan100(3, 77) ➞ true

??. Using the "&&" Operator
    Java has a logical operator &&. The && operator takes two boolean values, and returns true if both values are true.

    Consider a && b:
    a is checked if it is true or false.
    If a is false, false is returned.
    b is checked if it is true or false.
    If b is false, false is returned.
    Otherwise, true is returned (as both a and b are therefore true ).
    The && operator will only return true for true && true.

    Make a function using the && operator.